{"ast":null,"code":"import axios from 'axios';\nimport ProductBox from '@/components/ProductBox.vue';\nexport default {\n  name: 'Search',\n  components: {\n    ProductBox\n  },\n  data() {\n    return {\n      products: [],\n      query: ''\n    };\n  },\n  mounted() {\n    document.title = 'Search | Djackets';\n    let uri = window.location.search.substring(1);\n    let params = new URLSearchParams(uri);\n    if (params.get('query')) {\n      this.query = params.get('query');\n      this.performSearch();\n    }\n  },\n  methods: {\n    async performSearch() {\n      this.$store.commit('setIsLoading', true);\n      await axios.post('/api/v1/products/search/', {\n        'query': this.query\n      }).then(response => {\n        this.products = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    }\n  }\n};","map":{"version":3,"mappings":"AA8BA,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,UAAS,MAAO,6BAA4B;AACnD,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,OAAO,GAAG;IACNC,QAAQ,CAACC,KAAI,GAAI,mBAAkB;IACnC,IAAIC,GAAE,GAAIC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,SAAS,CAAC,CAAC;IAC5C,IAAIC,MAAK,GAAI,IAAIC,eAAe,CAACN,GAAG;IACpC,IAAIK,MAAM,CAACE,GAAG,CAAC,OAAO,CAAC,EAAE;MACrB,IAAI,CAACX,KAAI,GAAIS,MAAM,CAACE,GAAG,CAAC,OAAO;MAC/B,IAAI,CAACC,aAAa,EAAC;IACvB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,aAAa,GAAG;MAClB,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,IAAI;MACvC,MAAMrB,KAAI,CACLsB,IAAI,CAAC,0BAA0B,EAAE;QAAC,OAAO,EAAE,IAAI,CAAChB;MAAK,CAAC,EACtDiB,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACnB,QAAO,GAAImB,QAAQ,CAACpB,IAAG;MAChC,CAAC,EACAqB,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK;MACrB,CAAC;MACL,IAAI,CAACN,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,KAAK;IAC5C;EACJ;AACJ","names":["axios","ProductBox","name","components","data","products","query","mounted","document","title","uri","window","location","search","substring","params","URLSearchParams","get","performSearch","methods","$store","commit","post","then","response","catch","error","console","log"],"sourceRoot":"","sources":["C:\\Users\\shahe\\Desktop\\VS project\\django_vue\\src\\views\\Search.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-search\">\r\n        <div class=\"columns is-multiline\">\r\n            <div class=\"column is-12\">\r\n                <h1 class=\"title\">Search</h1>\r\n\r\n                <h2 class=\"is-size-5 has-text-grey\">Search term: \"{{ query }}\"</h2>\r\n            </div>\r\n\r\n            <div\r\n                v-for=\"product in products\"\r\n                v-bind:key=\"product.id\"\r\n                v-bind:product=\"product\">\r\n\r\n            <div class=\"box\">\r\n                    <figure class=\"image mb-4\">\r\n                         <img v-bind:src=\"product.get_thumbnail\">\r\n                    </figure>\r\n\r\n                    <h3 class=\"is-size-4\">{{ product.name }}</h3>\r\n                    <p class=\"is-size-6 has-text-grey\">${{ product.price }}</p>\r\n\r\n                    <router-link v-bind:to=\"product.get_absolute_url\" class=\"button is-dark mt-4\">View details</router-link>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport ProductBox from '@/components/ProductBox.vue'\r\nexport default {\r\n    name: 'Search',\r\n    components: {\r\n        ProductBox\r\n    },\r\n    data() {\r\n        return {\r\n            products: [],\r\n            query: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        document.title = 'Search | Djackets'\r\n        let uri = window.location.search.substring(1)\r\n        let params = new URLSearchParams(uri)\r\n        if (params.get('query')) {\r\n            this.query = params.get('query')\r\n            this.performSearch()\r\n        }\r\n    },\r\n    methods: {\r\n        async performSearch() {\r\n            this.$store.commit('setIsLoading', true)\r\n            await axios\r\n                .post('/api/v1/products/search/', {'query': this.query})\r\n                .then(response => {\r\n                    this.products = response.data\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n            this.$store.commit('setIsLoading', false)\r\n        }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}