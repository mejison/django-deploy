{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'Product',\n  props: {\n    product: Object,\n    question: Object\n  },\n  data() {\n    return {\n      product: {},\n      bidactive: '',\n      question: [],\n      bid: '',\n      ques: '',\n      errors: []\n    };\n  },\n  mounted() {\n    this.getProduct(), this.getQuestion();\n  },\n  methods: {\n    async getProduct() {\n      this.$store.commit('setIsLoading', true);\n      const product_slug = this.$route.params.product_slug;\n      await axios.get(`/api/v1/products/${product_slug}`).then(response => {\n        this.product = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    },\n    async getQuestion() {\n      this.$store.commit('setIsLoading', true);\n      const product_slug = this.$route.params.product_slug;\n      await axios.get(`/api/v1/getquestion/${product_slug}`).then(response => {\n        this.question = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    },\n    submitForm() {\n      this.errors = [];\n      if (this.bid === '') {\n        this.errors.push('the bid is missing');\n      }\n      if (!this.errors.length) {\n        this.$store.commit('setIsLoading', true);\n        this.AuctionHandler();\n      }\n    },\n    async AuctionHandler() {\n      const data = {\n        'bid': this.bid\n      };\n      await axios.post('/api/v1/bid/', data).then(response => {\n        this.$router.push('/');\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    submitQuestion() {\n      this.$store.commit('setIsLoading', true);\n      this.QuestionHandler();\n    },\n    async QuestionHandler() {\n      const data = {\n        'question_text': this.ques\n      };\n      await axios.post('/api/v1/question/', data).then(response => {\n        this.$router.push('/');\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    submitmail() {\n      this.mailHandler();\n    },\n    async mailHandler() {\n      const product_slug = this.$route.params.product_slug;\n      await axios.get(`/api/v1/sendmail/${product_slug}`).then(response => {\n        this.product = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","props","product","Object","question","data","bidactive","bid","ques","errors","mounted","getProduct","getQuestion","methods","$store","commit","product_slug","$route","params","get","then","response","catch","error","console","log","submitForm","push","length","AuctionHandler","post","$router","submitQuestion","QuestionHandler","submitmail","mailHandler"],"sourceRoot":"","sources":["C:\\Users\\shahe\\Desktop\\VS project\\django_vue\\src\\views\\Product.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-product\">\r\n        <div class=\"columns is-multiline\">\r\n            <div class=\"column is-9\">\r\n                <figure class=\"image mb-6\">\r\n                    <img v-bind:src=\"product.get_image\">\r\n                </figure>\r\n\r\n                <h1 class=\"title\">{{ product.name }}</h1>\r\n\r\n                <p>{{ product.description }}</p>\r\n            </div>\r\n\r\n            <div class=\"column is-3\">\r\n                <h2 class=\"subtitle\">Information</h2>\r\n\r\n                <p><strong>Price: </strong>${{ product.price}}</p>\r\n\r\n                <div class=\"field has-addons mt-6\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                           <input type=\"number\" class=\"input\" v-model=\"bid\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"control\">\r\n                        <button class=\"button is-dark\" @click=\"submitForm\">Submit</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div v-if=\"product.bid_active === true\">\r\n                            <label>Ask Question</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"ques\">\r\n                            </div>\r\n                            <div class=\"control\">\r\n                            <button class=\"button is-dark\" @click=\"submitQuestion\">Ask</button>\r\n                            </div>\r\n                </div>\r\n                <div v-else>\r\n                <h1><b> BIDDING ENDED! </b></h1>\r\n                 <div class=\"control\">\r\n                        <button class=\"button is-dark\" @click=\"submitmail\">SEND MAIL TO THE WINNER</button>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                 class=\"column is-3\"\r\n                 v-for=\"q in question\"\r\n                 v-bind:key=\"question.id\"\r\n                 >\r\n                <div>\r\n                <p>{{ q.question_text }}</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n\r\n    name: 'Product',\r\n    props: {\r\n    product: Object,\r\n    question: Object\r\n    },\r\n    data() {\r\n        return {\r\n            product: {},\r\n            bidactive: '',\r\n            question: [],\r\n            bid: '',\r\n            ques: '',\r\n            errors: []\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getProduct(),\r\n        this.getQuestion()\r\n    },\r\n    methods: {\r\n        async getProduct() {\r\n\r\n            this.$store.commit('setIsLoading', true)\r\n            const product_slug = this.$route.params.product_slug\r\n            await axios\r\n                .get(`/api/v1/products/${product_slug}`)\r\n                .then(response => {\r\n                    this.product = response.data\r\n                    \r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n            \r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n        async getQuestion() {\r\n            this.$store.commit('setIsLoading', true)\r\n\r\n            const product_slug = this.$route.params.product_slug\r\n            \r\n            await axios\r\n                .get(`/api/v1/getquestion/${product_slug}`)\r\n                .then(response => {\r\n                    this.question = response.data\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n            \r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n\r\n        submitForm(){\r\n             this.errors = []\r\n\r\n             if(this.bid === ''){\r\n                this.errors.push('the bid is missing')\r\n             }\r\n\r\n             if(!this.errors.length){\r\n                this.$store.commit('setIsLoading', true)\r\n                this.AuctionHandler()\r\n             }\r\n\r\n        },\r\n\r\n        async AuctionHandler(){\r\n            const data = {\r\n                'bid': this.bid\r\n            }\r\n            await axios\r\n                .post('/api/v1/bid/', data)\r\n                .then(response => {\r\n                    this.$router.push('/')\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        },\r\n\r\n        submitQuestion() {\r\n            this.$store.commit('setIsLoading', true)\r\n            this.QuestionHandler()\r\n        },\r\n        async QuestionHandler(){\r\n            const data = {\r\n                'question_text': this.ques\r\n            }\r\n            await axios\r\n                .post('/api/v1/question/', data)\r\n                .then(response => {\r\n                    this.$router.push('/')\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        },\r\n\r\n        submitmail() {\r\n            this.mailHandler()\r\n        },\r\n\r\n        async mailHandler() {\r\n\r\n            const product_slug = this.$route.params.product_slug\r\n\r\n            await axios\r\n                .get(`/api/v1/sendmail/${product_slug}`)\r\n                .then(response => {\r\n                    this.product = response.data\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n\r\n\r\n        }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}